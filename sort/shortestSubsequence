对于一个数组，请设计一个高效算法计算需要排序的最短子数组的长度。
给定一个int数组A和数组的大小n，请返回一个二元组，代表所求序列的长度。(原序列位置从0开始标号,若原序列有序，返回0)。保证A中元素均为正整数。
class Subsequence {
public:
    int shortestSubsequence(vector<int> A, int n) {
        if(n<=1||A.size()<=1)
            return 0;
        int max=A[0];
        int lasttosort=-1;
        for(int i=1;i<n;++i)
            {
            if(A[i]<max)
                {
                lasttosort=i;
            }
            else
                max=A[i];
        }
        int min=A[n-1];
        int firsttosort=-1;
        for(int i=n-2;i>=0;--i)
            {
            if(A[i]>min)
                {
                firsttosort=i;
            }
            else
                min=A[i];
        }
        if(lasttosort==firsttosort)
            return 0;
        return lasttosort-firsttosort+1;
    }
};
