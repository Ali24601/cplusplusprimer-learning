寻找错误结点
一棵二叉树原本是搜索二叉树，但是其中有两个节点调换了位置，使得这棵二叉树不再是搜索二叉树，请找到这两个错误节点并返回他们的值。
保证二叉树中结点的值各不相同。

给定一棵树的根结点，请返回两个调换了位置的值，其中小的值在前。

/*
struct TreeNode {
    int val;
    struct TreeNode *left;
    struct TreeNode *right;
    TreeNode(int x) :
            val(x), left(NULL), right(NULL) {
    }
};*/
 
class FindErrorNode {
public:
    vector<int> findError(TreeNode* root) {
        // write code here
        vector<int> ans;
        stack<TreeNode *>nodestack;
        TreeNode *cur=root;
        TreeNode *before=NULL;
        TreeNode *now=NULL;
        while(!nodestack.empty()||cur)
            {
            while(cur)
                {
                nodestack.push(cur);
                cur=cur->left;
            }
            before=now;
            now=nodestack.top();
            nodestack.pop();
            if(before&&before->val>now->val)
                {
                if(ans.empty())
                    {
                    ans.push_back(now->val);
                    ans.push_back(before->val);
                }
                else
                    ans[0]=now->val;
            }
            cur=now->right;
        }
        return ans;
    }
};
