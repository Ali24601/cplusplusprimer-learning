有一棵二叉树，请设计一个算法，按照层次打印这棵二叉树。
给定二叉树的根结点root，请返回打印结果，结果按照每一层一个数组进行储存，
所有数组的顺序按照层数从上往下，且每一层的数组内元素按照从左往右排列
保证结点数小于等于500。


/*
struct TreeNode {
    int val;
    struct TreeNode *left;
    struct TreeNode *right;
    TreeNode(int x) :
            val(x), left(NULL), right(NULL) {
    }
};*/

class TreePrinter {
public:
    vector<vector<int> > printTree(TreeNode* root) {
        // write code here
        vector<vector<int> > ans;
        if(!root)
            return ans;
        deque<TreeNode *> nodequeue;
        nodequeue.push_back(root);
        TreeNode*column=root;
        int level=0;
        while(!nodequeue.empty())
            {
            TreeNode *now=nodequeue.front();
            nodequeue.pop_front();
            if(ans.size()<=level)
                ans.push_back(vector<int>());
            ans[level].push_back(now->val);
            if(now->left)
                nodequeue.push_back(now->left);
            if(now->right)
                nodequeue.push_back(now->right);
            if(now==column)
                {
                column=nodequeue.back();
                ++level;
            }
        }
        return ans;
    }
};
