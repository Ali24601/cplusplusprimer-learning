一个背包有一定的承重cap，有N件物品，每件都有自己的价值，记录在数组v中，也都有自己的重量，记录在数组w中，每件物品只能选择要装入背包还是不装入背包，要求在不超过背包承重的前提下，选出物品的总价值最大。
给定物品的重量w价值v及物品数n和承重cap。请返回最大总价值。
测试样例：
[1,2,3],[1,2,3],3,6
返回：6

class Backpack {
public:
    int MAX(int a,int b)
        {
        return a>b?a:b;
    }
    int maxValue(vector<int> w, vector<int> v, int n, int cap) {
        // write code here
        int *dp=new int[cap+1];
        memset(dp,0,(cap+1)*sizeof(int));
        for(int i=0;i<n;++i)
            for(int j=cap;j>=0;--j)
            if(j>=w[i])
                dp[j]=MAX(dp[j-w[i]]+v[i],dp[j]);
            int max=0;
            for(int i=0;i<=cap;++i)
                max=MAX(dp[i],max);
            delete []dp;
            return max;
    }
};
添加笔记
