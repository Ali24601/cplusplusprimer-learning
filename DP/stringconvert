对于两个字符串A和B，我们需要进行插入、删除和修改操作将A串变为B串，定义c0，c1，c2分别为三种操作的代价，请设计一个高效算法，求出将A串变为B串所需要的最少代价。
给定两个字符串A和B，及它们的长度和三种操作代价，请返回将A串变为B串所需要的最小代价。保证两串长度均小于等于300，且三种代价值均小于等于100。
测试样例：
"abc",3,"adc",3,5,3,100
返回：8

#define MIN(a,b) ((a)<(b)?(a):(b))
class MinCost {
public:
    int findMinCost(string A, int n, string B, int m, int c0, int c1, int c2) {
        // write code here
        int **dp=(int **)malloc(2*sizeof(int*));
        for(int i=0;i<=1;++i)
            dp[i]=(int*)malloc((m+1)*sizeof(int));
        for(int j=0;j<=m;++j)
            dp[1][j]=c0*j;
        for(int i=0;i<n;++i)
            {
            int line=i&0x1;
            dp[line][0]=c1*(i+1);
            for(int j=1;j<=m;++j)
                {
                int min1=dp[line][j-1]+c0;
                int min2=dp[!line][j]+c1;
                int min3=dp[!line][j-1];
                if(A[i]!=B[j-1])
                    min3+=c2;
                dp[line][j]=MIN(min1,MIN(min3,min2));
        	}
        }
		int ans=dp[(n-1)&0x1][m];
        for(int i=0;i<=1;++i)
            free(dp[i]);
        free(dp);
        return ans;
    }
};
